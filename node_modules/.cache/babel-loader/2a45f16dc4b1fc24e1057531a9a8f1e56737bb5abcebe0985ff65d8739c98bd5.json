{"ast":null,"code":"var _jsxFileName = \"/Users/shreya/Desktop/DAA(sem-4)/lab-EL/StockSorting_Visualizer/src/components/Controls/DataSourceToggle.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataSourceToggle = ({\n  useLiveData,\n  setUseLiveData,\n  isSorting,\n  onDataChange\n}) => {\n  const handleToggle = async newValue => {\n    if (isSorting) return;\n    try {\n      setUseLiveData(newValue);\n      if (onDataChange) {\n        await onDataChange(newValue);\n      }\n    } catch (error) {\n      console.error(\"Error changing data source:\", error);\n      // Revert if error occurs\n      setUseLiveData(!newValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-source-toggle\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Data Source:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `toggle-option ${!useLiveData ? 'active' : ''}`,\n        onClick: () => handleToggle(false),\n        disabled: isSorting || !useLiveData,\n        \"aria-pressed\": !useLiveData,\n        children: \"Mock Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `toggle-option ${useLiveData ? 'active' : ''}`,\n        onClick: () => handleToggle(true),\n        disabled: isSorting || useLiveData,\n        \"aria-pressed\": useLiveData,\n        children: \"Live API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-source-status\",\n      children: useLiveData ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"live-status\",\n        children: \"\\u2713 Connected to live data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mock-status\",\n        children: \"Using mock data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = DataSourceToggle;\nDataSourceToggle.propTypes = {\n  useLiveData: PropTypes.bool.isRequired,\n  setUseLiveData: PropTypes.func.isRequired,\n  isSorting: PropTypes.bool,\n  onDataChange: PropTypes.func\n};\nDataSourceToggle.defaultProps = {\n  isSorting: false,\n  onDataChange: null\n};\nexport default DataSourceToggle;\nvar _c;\n$RefreshReg$(_c, \"DataSourceToggle\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","DataSourceToggle","useLiveData","setUseLiveData","isSorting","onDataChange","handleToggle","newValue","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","propTypes","bool","isRequired","func","defaultProps","$RefreshReg$"],"sources":["/Users/shreya/Desktop/DAA(sem-4)/lab-EL/StockSorting_Visualizer/src/components/Controls/DataSourceToggle.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DataSourceToggle = ({ \n  useLiveData, \n  setUseLiveData, \n  isSorting,\n  onDataChange \n}) => {\n  const handleToggle = async (newValue) => {\n    if (isSorting) return;\n    \n    try {\n      setUseLiveData(newValue);\n      if (onDataChange) {\n        await onDataChange(newValue);\n      }\n    } catch (error) {\n      console.error(\"Error changing data source:\", error);\n      // Revert if error occurs\n      setUseLiveData(!newValue);\n    }\n  };\n\n  return (\n    <div className=\"data-source-toggle\">\n      <label>Data Source:</label>\n      <div className=\"toggle-container\">\n        <button\n          className={`toggle-option ${!useLiveData ? 'active' : ''}`}\n          onClick={() => handleToggle(false)}\n          disabled={isSorting || !useLiveData}\n          aria-pressed={!useLiveData}\n        >\n          Mock Data\n        </button>\n        <button\n          className={`toggle-option ${useLiveData ? 'active' : ''}`}\n          onClick={() => handleToggle(true)}\n          disabled={isSorting || useLiveData}\n          aria-pressed={useLiveData}\n        >\n          Live API\n        </button>\n      </div>\n      <div className=\"data-source-status\">\n        {useLiveData ? (\n          <span className=\"live-status\">âœ“ Connected to live data</span>\n        ) : (\n          <span className=\"mock-status\">Using mock data</span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nDataSourceToggle.propTypes = {\n  useLiveData: PropTypes.bool.isRequired,\n  setUseLiveData: PropTypes.func.isRequired,\n  isSorting: PropTypes.bool,\n  onDataChange: PropTypes.func\n};\n\nDataSourceToggle.defaultProps = {\n  isSorting: false,\n  onDataChange: null\n};\n\nexport default DataSourceToggle;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}