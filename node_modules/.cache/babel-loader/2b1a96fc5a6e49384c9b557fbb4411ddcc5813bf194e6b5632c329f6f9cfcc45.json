{"ast":null,"code":"var _jsxFileName = \"/Users/shreya/Desktop/DAA(sem-4)/lab-EL/StockSorting_Visualizer/src/components/GuessAlgorithm/GuessAlgorithm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './GuessAlgorithm.css';\nimport StockVisualization from '../Visualizations/StockVisualization';\nimport PerformanceMetrics from '../Metrics/PerformanceMetrics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GuessAlgorithm = ({\n  stocks,\n  onStockSelect,\n  sortKey,\n  visualizationType,\n  speed,\n  setStocks,\n  setIsSorting\n}) => {\n  _s();\n  var _algorithms$find;\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState(null);\n  const [userGuess, setUserGuess] = useState('');\n  const [showResult, setShowResult] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [metrics, setMetrics] = useState({\n    comparisons: 0,\n    swaps: 0,\n    startTime: null,\n    timeTaken: 0\n  });\n  const [isSorting, setLocalIsSorting] = useState(false);\n  const algorithms = [{\n    id: 'bubble',\n    name: 'Bubble Sort'\n  }, {\n    id: 'quick',\n    name: 'Quick Sort'\n  }, {\n    id: 'merge',\n    name: 'Merge Sort'\n  }, {\n    id: 'heap',\n    name: 'Heap Sort'\n  }];\n  useEffect(() => {\n    if (!selectedAlgorithm) {\n      // Randomly select an algorithm when component mounts\n      const randomIndex = Math.floor(Math.random() * algorithms.length);\n      setSelectedAlgorithm(algorithms[randomIndex].id);\n    }\n  }, []);\n  const startNewGame = () => {\n    // Reset game state\n    setShowResult(false);\n    setUserGuess('');\n    setIsCorrect(false);\n    setMetrics({\n      comparisons: 0,\n      swaps: 0,\n      startTime: null,\n      timeTaken: 0\n    });\n    // Select new random algorithm\n    const randomIndex = Math.floor(Math.random() * algorithms.length);\n    setSelectedAlgorithm(algorithms[randomIndex].id);\n    // Shuffle stocks\n    setStocks([...stocks].sort(() => Math.random() - 0.5));\n  };\n  const startSort = () => {\n    setLocalIsSorting(true);\n    setIsSorting(true);\n  };\n  const handleGuessSubmit = () => {\n    const isGuessCorrect = userGuess.toLowerCase() === selectedAlgorithm;\n    setIsCorrect(isGuessCorrect);\n    setShowResult(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guess-algorithm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guess-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSort,\n        disabled: isSorting || showResult,\n        className: \"start-button\",\n        children: \"Start Sorting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guess-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userGuess,\n          onChange: e => setUserGuess(e.target.value),\n          placeholder: \"Enter algorithm name...\",\n          disabled: !isSorting || showResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGuessSubmit,\n          disabled: !isSorting || showResult || !userGuess,\n          className: \"submit-button\",\n          children: \"Submit Guess\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `result ${isCorrect ? 'correct' : 'incorrect'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: isCorrect ? 'WIN! ðŸŽ‰' : 'LOSE ðŸ˜¢'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The algorithm was: \", (_algorithms$find = algorithms.find(a => a.id === selectedAlgorithm)) === null || _algorithms$find === void 0 ? void 0 : _algorithms$find.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startNewGame,\n          className: \"new-game-button\",\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization-container\",\n      children: [/*#__PURE__*/_jsxDEV(StockVisualization, {\n        stocks: stocks,\n        visualizationType: visualizationType,\n        sortKey: sortKey,\n        onStockSelect: onStockSelect,\n        algorithm: selectedAlgorithm,\n        speed: speed,\n        isRacing: isSorting,\n        setMetrics: setMetrics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PerformanceMetrics, {\n        metrics: metrics,\n        activeAlgorithm: showResult ? selectedAlgorithm : null,\n        sortKey: sortKey,\n        isSorting: isSorting,\n        hideAlgorithmName: !showResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(GuessAlgorithm, \"tEOdSJvciMJnQAGGf9tch5qyNs4=\");\n_c = GuessAlgorithm;\nexport default GuessAlgorithm;\nvar _c;\n$RefreshReg$(_c, \"GuessAlgorithm\");","map":{"version":3,"names":["React","useState","useEffect","StockVisualization","PerformanceMetrics","jsxDEV","_jsxDEV","GuessAlgorithm","stocks","onStockSelect","sortKey","visualizationType","speed","setStocks","setIsSorting","_s","_algorithms$find","selectedAlgorithm","setSelectedAlgorithm","userGuess","setUserGuess","showResult","setShowResult","isCorrect","setIsCorrect","metrics","setMetrics","comparisons","swaps","startTime","timeTaken","isSorting","setLocalIsSorting","algorithms","id","name","randomIndex","Math","floor","random","length","startNewGame","sort","startSort","handleGuessSubmit","isGuessCorrect","toLowerCase","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","find","a","algorithm","isRacing","activeAlgorithm","hideAlgorithmName","_c","$RefreshReg$"],"sources":["/Users/shreya/Desktop/DAA(sem-4)/lab-EL/StockSorting_Visualizer/src/components/GuessAlgorithm/GuessAlgorithm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './GuessAlgorithm.css';\nimport StockVisualization from '../Visualizations/StockVisualization';\nimport PerformanceMetrics from '../Metrics/PerformanceMetrics';\n\nconst GuessAlgorithm = ({\n  stocks,\n  onStockSelect,\n  sortKey,\n  visualizationType,\n  speed,\n  setStocks,\n  setIsSorting\n}) => {\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState(null);\n  const [userGuess, setUserGuess] = useState('');\n  const [showResult, setShowResult] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [metrics, setMetrics] = useState({\n    comparisons: 0,\n    swaps: 0,\n    startTime: null,\n    timeTaken: 0\n  });\n  const [isSorting, setLocalIsSorting] = useState(false);\n\n  const algorithms = [\n    { id: 'bubble', name: 'Bubble Sort' },\n    { id: 'quick', name: 'Quick Sort' },\n    { id: 'merge', name: 'Merge Sort' },\n    { id: 'heap', name: 'Heap Sort' }\n  ];\n\n  useEffect(() => {\n    if (!selectedAlgorithm) {\n      // Randomly select an algorithm when component mounts\n      const randomIndex = Math.floor(Math.random() * algorithms.length);\n      setSelectedAlgorithm(algorithms[randomIndex].id);\n    }\n  }, []);\n\n  const startNewGame = () => {\n    // Reset game state\n    setShowResult(false);\n    setUserGuess('');\n    setIsCorrect(false);\n    setMetrics({\n      comparisons: 0,\n      swaps: 0,\n      startTime: null,\n      timeTaken: 0\n    });\n    // Select new random algorithm\n    const randomIndex = Math.floor(Math.random() * algorithms.length);\n    setSelectedAlgorithm(algorithms[randomIndex].id);\n    // Shuffle stocks\n    setStocks([...stocks].sort(() => Math.random() - 0.5));\n  };\n\n  const startSort = () => {\n    setLocalIsSorting(true);\n    setIsSorting(true);\n  };\n\n  const handleGuessSubmit = () => {\n    const isGuessCorrect = userGuess.toLowerCase() === selectedAlgorithm;\n    setIsCorrect(isGuessCorrect);\n    setShowResult(true);\n  };\n\n  return (\n    <div className=\"guess-algorithm\">\n      <div className=\"guess-controls\">\n        <button \n          onClick={startSort} \n          disabled={isSorting || showResult}\n          className=\"start-button\"\n        >\n          Start Sorting\n        </button>\n\n        <div className=\"guess-input\">\n          <input\n            type=\"text\"\n            value={userGuess}\n            onChange={(e) => setUserGuess(e.target.value)}\n            placeholder=\"Enter algorithm name...\"\n            disabled={!isSorting || showResult}\n          />\n          <button \n            onClick={handleGuessSubmit}\n            disabled={!isSorting || showResult || !userGuess}\n            className=\"submit-button\"\n          >\n            Submit Guess\n          </button>\n        </div>\n\n        {showResult && (\n          <div className={`result ${isCorrect ? 'correct' : 'incorrect'}`}>\n            <h3>{isCorrect ? 'WIN! ðŸŽ‰' : 'LOSE ðŸ˜¢'}</h3>\n            <p>The algorithm was: {algorithms.find(a => a.id === selectedAlgorithm)?.name}</p>\n            <button onClick={startNewGame} className=\"new-game-button\">\n              Play Again\n            </button>\n          </div>\n        )}\n      </div>\n\n      <div className=\"visualization-container\">\n        <StockVisualization\n          stocks={stocks}\n          visualizationType={visualizationType}\n          sortKey={sortKey}\n          onStockSelect={onStockSelect}\n          algorithm={selectedAlgorithm}\n          speed={speed}\n          isRacing={isSorting}\n          setMetrics={setMetrics}\n        />\n        \n        <PerformanceMetrics\n          metrics={metrics}\n          activeAlgorithm={showResult ? selectedAlgorithm : null}\n          sortKey={sortKey}\n          isSorting={isSorting}\n          hideAlgorithmName={!showResult}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default GuessAlgorithm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}