{"ast":null,"code":"var _jsxFileName = \"C:\\\\stock-sorting-visualizer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchStockData } from './api/stockApi';\nimport Controls from './components/Controls/Controls';\nimport Visualization from './components/Visualizations/Visualization';\nimport './styles/main.css';\nimport PerformanceMetrics from './components/Metrics/PerformanceMetrics';\nimport DataSourceToggle from './components/Controls/DataSourceToggle';\nimport StockInfoPanel from './components/Metrics/StockInfoPanel';\nimport { mockStocks } from './api/mockData';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [useLiveData, setUseLiveData] = useState(false);\n  const [selectedStock, setSelectedStock] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSorting, setIsSorting] = useState(false);\n  const [activeAlgorithm, setActiveAlgorithm] = useState('bubble');\n  const [sortKey, setSortKey] = useState('price');\n  const [speed, setSpeed] = useState(500);\n  const [visualizationType, setVisualizationType] = useState('bar');\n  const [metrics, setMetrics] = useState({\n    comparisons: 0,\n    swaps: 0,\n    startTime: null,\n    timeTaken: 0\n  });\n\n  // Data loading effect\n  useEffect(() => {\n    const loadData = async () => {\n      setIsLoading(true);\n      try {\n        const data = useLiveData ? await fetchStockData() : mockStocks;\n        setStocks(data);\n        setSelectedStock(null);\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n        setStocks(mockStocks); // Fallback to mock data\n        if (useLiveData) setUseLiveData(false); // Revert to mock if live fails\n      }\n      setIsLoading(false);\n    };\n    loadData();\n  }, [useLiveData]);\n  const handleStockSelect = stock => {\n    setSelectedStock(stock);\n  };\n  const handleDataChange = async useLive => {\n    setIsLoading(true);\n    try {\n      const data = useLive ? await fetchStockData() : mockStocks;\n      setStocks(data);\n    } catch (error) {\n      console.error(\"Data load error:\", error);\n      setStocks(mockStocks); // Fallback to mock data\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Sorting Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataSourceToggle, {\n      useLiveData: useLiveData,\n      setUseLiveData: setUseLiveData,\n      isSorting: isSorting,\n      onDataChange: handleDataChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      activeAlgorithm: activeAlgorithm,\n      setActiveAlgorithm: setActiveAlgorithm,\n      sortKey: sortKey,\n      setSortKey: setSortKey,\n      speed: speed,\n      setSpeed: setSpeed,\n      visualizationType: visualizationType,\n      setVisualizationType: setVisualizationType,\n      isSorting: isSorting,\n      stocks: stocks,\n      setStocks: setStocks,\n      setIsSorting: setIsSorting,\n      setMetrics: setMetrics,\n      metrics: metrics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Visualization, {\n        stocks: stocks,\n        visualizationType: visualizationType,\n        sortKey: sortKey,\n        onStockSelect: setSelectedStock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PerformanceMetrics, {\n        metrics: metrics,\n        activeAlgorithm: activeAlgorithm,\n        sortKey: sortKey,\n        isSorting: isSorting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StockInfoPanel, {\n        selectedStock: selectedStock,\n        stocks: stocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XRttZXuoKJFTc4D6SiOpKbTb+AQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchStockData","Controls","Visualization","PerformanceMetrics","DataSourceToggle","StockInfoPanel","mockStocks","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","stocks","setStocks","useLiveData","setUseLiveData","selectedStock","setSelectedStock","isLoading","setIsLoading","isSorting","setIsSorting","activeAlgorithm","setActiveAlgorithm","sortKey","setSortKey","speed","setSpeed","visualizationType","setVisualizationType","metrics","setMetrics","comparisons","swaps","startTime","timeTaken","loadData","data","error","console","handleStockSelect","stock","handleDataChange","useLive","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDataChange","onStockSelect","_c","$RefreshReg$"],"sources":["C:/stock-sorting-visualizer/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchStockData } from './api/stockApi';\r\nimport Controls from './components/Controls/Controls';\r\nimport Visualization from './components/Visualizations/Visualization';\r\nimport './styles/main.css';\r\nimport PerformanceMetrics from './components/Metrics/PerformanceMetrics';\r\nimport DataSourceToggle from './components/Controls/DataSourceToggle';\r\nimport StockInfoPanel from './components/Metrics/StockInfoPanel';\r\nimport { mockStocks } from './api/mockData';\r\n\r\nfunction App() {\r\n  const [stocks, setStocks] = useState([]);\r\n  const [useLiveData, setUseLiveData] = useState(false);\r\n  const [selectedStock, setSelectedStock] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSorting, setIsSorting] = useState(false);\r\n  const [activeAlgorithm, setActiveAlgorithm] = useState('bubble');\r\n  const [sortKey, setSortKey] = useState('price');\r\n  const [speed, setSpeed] = useState(500);\r\n  const [visualizationType, setVisualizationType] = useState('bar');\r\n  const [metrics, setMetrics] = useState({\r\n    comparisons: 0,\r\n    swaps: 0,\r\n    startTime: null,\r\n    timeTaken: 0\r\n  });\r\n\r\n  // Data loading effect\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const data = useLiveData ? await fetchStockData() : mockStocks;\r\n        setStocks(data);\r\n        setSelectedStock(null);\r\n      } catch (error) {\r\n        console.error(\"Error loading data:\", error);\r\n        setStocks(mockStocks); // Fallback to mock data\r\n        if (useLiveData) setUseLiveData(false); // Revert to mock if live fails\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    \r\n    loadData();\r\n  }, [useLiveData]);\r\n\r\n  const handleStockSelect = (stock) => {\r\n    setSelectedStock(stock);\r\n  };\r\n  const handleDataChange = async (useLive) => {\r\n  setIsLoading(true);\r\n  try {\r\n    const data = useLive ? await fetchStockData() : mockStocks;\r\n    setStocks(data);\r\n  } catch (error) {\r\n    console.error(\"Data load error:\", error);\r\n    setStocks(mockStocks); // Fallback to mock data\r\n  }\r\n  setIsLoading(false);\r\n};\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Stock Sorting Visualizer</h1>\r\n      \r\n      <DataSourceToggle\r\n        useLiveData={useLiveData}\r\n        setUseLiveData={setUseLiveData}\r\n        isSorting={isSorting}\r\n        onDataChange={handleDataChange}\r\n      />\r\n      \r\n      <Controls\r\n        activeAlgorithm={activeAlgorithm}\r\n        setActiveAlgorithm={setActiveAlgorithm}\r\n        sortKey={sortKey}\r\n        setSortKey={setSortKey}\r\n        speed={speed}\r\n        setSpeed={setSpeed}\r\n        visualizationType={visualizationType}\r\n        setVisualizationType={setVisualizationType}\r\n        isSorting={isSorting}\r\n        stocks={stocks}\r\n        setStocks={setStocks}\r\n        setIsSorting={setIsSorting}\r\n        setMetrics={setMetrics}\r\n        metrics={metrics}\r\n      />\r\n      \r\n      {isLoading ? (\r\n        <div className=\"loading\">Loading data...</div>\r\n      ) : (\r\n        <>\r\n          <Visualization\r\n            stocks={stocks}\r\n            visualizationType={visualizationType}\r\n            sortKey={sortKey}\r\n            onStockSelect={setSelectedStock}  \r\n          />\r\n          \r\n          <PerformanceMetrics \r\n            metrics={metrics}\r\n            activeAlgorithm={activeAlgorithm}\r\n            sortKey={sortKey}\r\n            isSorting={isSorting}\r\n          />\r\n          \r\n          <StockInfoPanel \r\n            selectedStock={selectedStock} \r\n            stocks={stocks} \r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}