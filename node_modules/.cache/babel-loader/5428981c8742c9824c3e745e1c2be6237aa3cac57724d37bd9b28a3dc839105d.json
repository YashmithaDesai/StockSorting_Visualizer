{"ast":null,"code":"const bubbleSort = async (array, key, speed, updateFn) => {\n  const n = array.length;\n  let swapped;\n\n  // Pseudo code step 0: Start outer loop\n  await updateFn(array, [], false, speed, null, 0);\n  for (let i = 0; i < n - 1; i++) {\n    swapped = false;\n\n    // Pseudo code step 1: Start inner loop\n    await updateFn(array, [], false, speed, null, 1);\n    for (let j = 0; j < n - i - 1; j++) {\n      // Pseudo code step 2: Compare adjacent elements\n      await updateFn(array, [j, j + 1], false, speed, null, 2);\n      if (array[j][key] > array[j + 1][key]) {\n        // Pseudo code step 3: Swap if needed\n        await updateFn(array, [j, j + 1], true, speed, null, 3);\n\n        // Perform swap\n        const temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n        swapped = true;\n      }\n    }\n\n    // Pseudo code step 4: End inner loop\n    await updateFn(array, [], false, speed, null, 4);\n    if (!swapped) {\n      break;\n    }\n  }\n\n  // Pseudo code step 5: End outer loop\n  await updateFn(array, [], false, speed, {\n    totalComparisons: n * (n - 1) / 2,\n    totalSwaps: n * (n - 1) / 4 // Average case\n  }, 5);\n  return array;\n};\nexport default bubbleSort;","map":{"version":3,"names":["bubbleSort","array","key","speed","updateFn","n","length","swapped","i","j","temp","totalComparisons","totalSwaps"],"sources":["/Users/shreya/Desktop/DAA(sem-4)/lab-EL/StockSorting_Visualizer/src/algorithms/bubbleSort.js"],"sourcesContent":["const bubbleSort = async (array, key, speed, updateFn) => {\n  const n = array.length;\n  let swapped;\n\n  // Pseudo code step 0: Start outer loop\n  await updateFn(array, [], false, speed, null, 0);\n\n  for (let i = 0; i < n - 1; i++) {\n    swapped = false;\n\n    // Pseudo code step 1: Start inner loop\n    await updateFn(array, [], false, speed, null, 1);\n\n    for (let j = 0; j < n - i - 1; j++) {\n      // Pseudo code step 2: Compare adjacent elements\n      await updateFn(array, [j, j + 1], false, speed, null, 2);\n\n      if (array[j][key] > array[j + 1][key]) {\n        // Pseudo code step 3: Swap if needed\n        await updateFn(array, [j, j + 1], true, speed, null, 3);\n        \n        // Perform swap\n        const temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n        swapped = true;\n      }\n    }\n\n    // Pseudo code step 4: End inner loop\n    await updateFn(array, [], false, speed, null, 4);\n\n    if (!swapped) {\n      break;\n    }\n  }\n\n  // Pseudo code step 5: End outer loop\n  await updateFn(array, [], false, speed, {\n    totalComparisons: (n * (n - 1)) / 2,\n    totalSwaps: n * (n - 1) / 4 // Average case\n  }, 5);\n\n  return array;\n};\n\nexport default bubbleSort;"],"mappings":"AAAA,MAAMA,UAAU,GAAG,MAAAA,CAAOC,KAAK,EAAEC,GAAG,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EACxD,MAAMC,CAAC,GAAGJ,KAAK,CAACK,MAAM;EACtB,IAAIC,OAAO;;EAEX;EACA,MAAMH,QAAQ,CAACH,KAAK,EAAE,EAAE,EAAE,KAAK,EAAEE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;EAEhD,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,CAAC,GAAG,CAAC,EAAEG,CAAC,EAAE,EAAE;IAC9BD,OAAO,GAAG,KAAK;;IAEf;IACA,MAAMH,QAAQ,CAACH,KAAK,EAAE,EAAE,EAAE,KAAK,EAAEE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;IAEhD,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,GAAGG,CAAC,GAAG,CAAC,EAAEC,CAAC,EAAE,EAAE;MAClC;MACA,MAAML,QAAQ,CAACH,KAAK,EAAE,CAACQ,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAEN,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;MAExD,IAAIF,KAAK,CAACQ,CAAC,CAAC,CAACP,GAAG,CAAC,GAAGD,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC,CAACP,GAAG,CAAC,EAAE;QACrC;QACA,MAAME,QAAQ,CAACH,KAAK,EAAE,CAACQ,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAEN,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;;QAEvD;QACA,MAAMO,IAAI,GAAGT,KAAK,CAACQ,CAAC,CAAC;QACrBR,KAAK,CAACQ,CAAC,CAAC,GAAGR,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC;QACvBR,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC,GAAGC,IAAI;QACnBH,OAAO,GAAG,IAAI;MAChB;IACF;;IAEA;IACA,MAAMH,QAAQ,CAACH,KAAK,EAAE,EAAE,EAAE,KAAK,EAAEE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;IAEhD,IAAI,CAACI,OAAO,EAAE;MACZ;IACF;EACF;;EAEA;EACA,MAAMH,QAAQ,CAACH,KAAK,EAAE,EAAE,EAAE,KAAK,EAAEE,KAAK,EAAE;IACtCQ,gBAAgB,EAAGN,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC,GAAI,CAAC;IACnCO,UAAU,EAAEP,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9B,CAAC,EAAE,CAAC,CAAC;EAEL,OAAOJ,KAAK;AACd,CAAC;AAED,eAAeD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}