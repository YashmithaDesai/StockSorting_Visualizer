{"ast":null,"code":"var _jsxFileName = \"/Users/shreya/Desktop/DAA(sem-4)/lab-EL/StockSorting_Visualizer/src/components/Visualizations/Visualization.js\";\nimport React from 'react';\nimport StockVisualization from './StockVisualization';\nimport BarChart from './BarChart';\nimport LineChart from './LineChart';\nimport ScatterPlot from './ScatterPlot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visualization = ({\n  stocks,\n  visualizationType,\n  sortKey,\n  onStockSelect,\n  algorithm,\n  speed,\n  isRacing,\n  setMetrics\n}) => {\n  const handleStockClick = stock => {\n    if (onStockSelect) {\n      onStockSelect(stock);\n    }\n  };\n\n  // If we have an active algorithm, use StockVisualization\n  if (algorithm) {\n    return /*#__PURE__*/_jsxDEV(StockVisualization, {\n      stocks: stocks,\n      visualizationType: visualizationType,\n      sortKey: sortKey,\n      onStockSelect: onStockSelect,\n      algorithm: algorithm,\n      speed: speed,\n      isRacing: isRacing,\n      setMetrics: setMetrics,\n      mode: \"single\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Otherwise, use the static visualizations\n  const renderVisualization = () => {\n    const commonProps = {\n      data: stocks,\n      sortKey: sortKey,\n      onStockClick: handleStockClick\n    };\n    switch (visualizationType) {\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(BarChart, {\n          ...commonProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(LineChart, {\n          ...commonProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }, this);\n      case 'scatter':\n        return /*#__PURE__*/_jsxDEV(ScatterPlot, {\n          ...commonProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(BarChart, {\n          ...commonProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"visualization-container\",\n    children: renderVisualization()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_c = Visualization;\nexport default Visualization;\nvar _c;\n$RefreshReg$(_c, \"Visualization\");","map":{"version":3,"names":["React","StockVisualization","BarChart","LineChart","ScatterPlot","jsxDEV","_jsxDEV","Visualization","stocks","visualizationType","sortKey","onStockSelect","algorithm","speed","isRacing","setMetrics","handleStockClick","stock","mode","fileName","_jsxFileName","lineNumber","columnNumber","renderVisualization","commonProps","data","onStockClick","className","children","_c","$RefreshReg$"],"sources":["/Users/shreya/Desktop/DAA(sem-4)/lab-EL/StockSorting_Visualizer/src/components/Visualizations/Visualization.js"],"sourcesContent":["import React from 'react';\nimport StockVisualization from './StockVisualization';\nimport BarChart from './BarChart';\nimport LineChart from './LineChart';\nimport ScatterPlot from './ScatterPlot';\n\nconst Visualization = ({ \n  stocks, \n  visualizationType, \n  sortKey, \n  onStockSelect,\n  algorithm,\n  speed,\n  isRacing,\n  setMetrics\n}) => {\n  const handleStockClick = (stock) => {\n    if (onStockSelect) {\n      onStockSelect(stock);\n    }\n  };\n\n  // If we have an active algorithm, use StockVisualization\n  if (algorithm) {\n    return (\n      <StockVisualization\n        stocks={stocks}\n        visualizationType={visualizationType}\n        sortKey={sortKey}\n        onStockSelect={onStockSelect}\n        algorithm={algorithm}\n        speed={speed}\n        isRacing={isRacing}\n        setMetrics={setMetrics}\n        mode=\"single\"\n      />\n    );\n  }\n\n  // Otherwise, use the static visualizations\n  const renderVisualization = () => {\n    const commonProps = {\n      data: stocks,\n      sortKey: sortKey,\n      onStockClick: handleStockClick\n    };\n\n    switch (visualizationType) {\n      case 'bar':\n        return <BarChart {...commonProps} />;\n      case 'line':\n        return <LineChart {...commonProps} />;\n      case 'scatter':\n        return <ScatterPlot {...commonProps} />;\n      default:\n        return <BarChart {...commonProps} />;\n    }\n  };\n\n  return (\n    <div className=\"visualization-container\">\n      {renderVisualization()}\n    </div>\n  );\n};\n\nexport default Visualization;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAC;EACrBC,MAAM;EACNC,iBAAiB;EACjBC,OAAO;EACPC,aAAa;EACbC,SAAS;EACTC,KAAK;EACLC,QAAQ;EACRC;AACF,CAAC,KAAK;EACJ,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClC,IAAIN,aAAa,EAAE;MACjBA,aAAa,CAACM,KAAK,CAAC;IACtB;EACF,CAAC;;EAED;EACA,IAAIL,SAAS,EAAE;IACb,oBACEN,OAAA,CAACL,kBAAkB;MACjBO,MAAM,EAAEA,MAAO;MACfC,iBAAiB,EAAEA,iBAAkB;MACrCC,OAAO,EAAEA,OAAQ;MACjBC,aAAa,EAAEA,aAAc;MAC7BC,SAAS,EAAEA,SAAU;MACrBC,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEA,QAAS;MACnBC,UAAU,EAAEA,UAAW;MACvBG,IAAI,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAEN;;EAEA;EACA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,WAAW,GAAG;MAClBC,IAAI,EAAEjB,MAAM;MACZE,OAAO,EAAEA,OAAO;MAChBgB,YAAY,EAAEV;IAChB,CAAC;IAED,QAAQP,iBAAiB;MACvB,KAAK,KAAK;QACR,oBAAOH,OAAA,CAACJ,QAAQ;UAAA,GAAKsB;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MACtC,KAAK,MAAM;QACT,oBAAOhB,OAAA,CAACH,SAAS;UAAA,GAAKqB;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MACvC,KAAK,SAAS;QACZ,oBAAOhB,OAAA,CAACF,WAAW;UAAA,GAAKoB;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MACzC;QACE,oBAAOhB,OAAA,CAACJ,QAAQ;UAAA,GAAKsB;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;IACxC;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKqB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,EACrCL,mBAAmB,CAAC;EAAC;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACO,EAAA,GA1DItB,aAAa;AA4DnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}