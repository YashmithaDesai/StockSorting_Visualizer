{"ast":null,"code":"var _jsxFileName = \"/Users/shreya/Desktop/DAA(sem-4)/lab-EL/StockSorting_Visualizer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchStockData } from './api/stockApi';\nimport Controls from './components/Controls/Controls';\nimport Visualization from './components/Visualizations/Visualization';\nimport './styles/main.css';\nimport PerformanceMetrics from './components/Metrics/PerformanceMetrics';\nimport DataSourceToggle from './components/Controls/DataSourceToggle';\nimport StockInfoPanel from './components/Metrics/StockInfoPanel';\nimport { mockStocks } from './api/mockData';\nimport StockVisualization from './components/Visualizations/StockVisualization';\nimport AlgorithmExplanation from './components/AlgorithmInfo/AlgorithmExplanation';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [useLiveData, setUseLiveData] = useState(false);\n  const [selectedStock, setSelectedStock] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSorting, setIsSorting] = useState(false);\n  const [activeAlgorithm, setActiveAlgorithm] = useState('bubble');\n  const [sortKey, setSortKey] = useState('price');\n  const [speed, setSpeed] = useState(500);\n  const [visualizationType, setVisualizationType] = useState('bar');\n  const [metrics, setMetrics] = useState({\n    comparisons: 0,\n    swaps: 0,\n    startTime: null,\n    timeTaken: 0\n  });\n\n  // Data loading effect\n  useEffect(() => {\n    const loadData = async () => {\n      setIsLoading(true);\n      try {\n        const data = useLiveData ? await fetchStockData() : mockStocks;\n        setStocks(data);\n        setSelectedStock(null);\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n        setStocks(mockStocks); // Fallback to mock data\n        if (useLiveData) setUseLiveData(false); // Revert to mock if live fails\n      }\n      setIsLoading(false);\n    };\n    loadData();\n  }, [useLiveData]);\n  const handleStockSelect = stock => {\n    setSelectedStock(stock);\n  };\n  const handleDataChange = async useLive => {\n    setIsLoading(true);\n    try {\n      const data = useLive ? await fetchStockData() : mockStocks;\n      setStocks(data);\n    } catch (error) {\n      console.error(\"Data load error:\", error);\n      setStocks(mockStocks); // Fallback to mock data\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Sorting Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataSourceToggle, {\n      useLiveData: useLiveData,\n      setUseLiveData: setUseLiveData,\n      isSorting: isSorting,\n      onDataChange: handleDataChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      activeAlgorithm: activeAlgorithm,\n      setActiveAlgorithm: setActiveAlgorithm,\n      sortKey: sortKey,\n      setSortKey: setSortKey,\n      speed: speed,\n      setSpeed: setSpeed,\n      visualizationType: visualizationType,\n      setVisualizationType: setVisualizationType,\n      isSorting: isSorting,\n      stocks: stocks,\n      setStocks: setStocks,\n      setIsSorting: setIsSorting,\n      setMetrics: setMetrics,\n      metrics: metrics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-container\",\n        children: [/*#__PURE__*/_jsxDEV(Visualization, {\n          stocks: stocks,\n          visualizationType: visualizationType,\n          sortKey: sortKey,\n          onStockSelect: setSelectedStock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AlgorithmExplanation, {\n          activeAlgorithm: activeAlgorithm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PerformanceMetrics, {\n        metrics: metrics,\n        activeAlgorithm: activeAlgorithm,\n        sortKey: sortKey,\n        isSorting: isSorting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StockInfoPanel, {\n        selectedStock: selectedStock,\n        stocks: stocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GtAVsfZuzKCmniwKcFgbGgOLVYw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchStockData","Controls","Visualization","PerformanceMetrics","DataSourceToggle","StockInfoPanel","mockStocks","StockVisualization","AlgorithmExplanation","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","stocks","setStocks","useLiveData","setUseLiveData","selectedStock","setSelectedStock","isLoading","setIsLoading","isSorting","setIsSorting","activeAlgorithm","setActiveAlgorithm","sortKey","setSortKey","speed","setSpeed","visualizationType","setVisualizationType","metrics","setMetrics","comparisons","swaps","startTime","timeTaken","loadData","data","error","console","handleStockSelect","stock","handleDataChange","useLive","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDataChange","onStockSelect","_c","$RefreshReg$"],"sources":["/Users/shreya/Desktop/DAA(sem-4)/lab-EL/StockSorting_Visualizer/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchStockData } from './api/stockApi';\nimport Controls from './components/Controls/Controls';\nimport Visualization from './components/Visualizations/Visualization';\nimport './styles/main.css';\nimport PerformanceMetrics from './components/Metrics/PerformanceMetrics';\nimport DataSourceToggle from './components/Controls/DataSourceToggle';\nimport StockInfoPanel from './components/Metrics/StockInfoPanel';\nimport { mockStocks } from './api/mockData';\nimport StockVisualization from './components/Visualizations/StockVisualization';\nimport AlgorithmExplanation from './components/AlgorithmInfo/AlgorithmExplanation';\n\nfunction App() {\n  const [stocks, setStocks] = useState([]);\n  const [useLiveData, setUseLiveData] = useState(false);\n  const [selectedStock, setSelectedStock] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSorting, setIsSorting] = useState(false);\n  const [activeAlgorithm, setActiveAlgorithm] = useState('bubble');\n  const [sortKey, setSortKey] = useState('price');\n  const [speed, setSpeed] = useState(500);\n  const [visualizationType, setVisualizationType] = useState('bar');\n  const [metrics, setMetrics] = useState({\n    comparisons: 0,\n    swaps: 0,\n    startTime: null,\n    timeTaken: 0\n  });\n\n  // Data loading effect\n  useEffect(() => {\n    const loadData = async () => {\n      setIsLoading(true);\n      try {\n        const data = useLiveData ? await fetchStockData() : mockStocks;\n        setStocks(data);\n        setSelectedStock(null);\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n        setStocks(mockStocks); // Fallback to mock data\n        if (useLiveData) setUseLiveData(false); // Revert to mock if live fails\n      }\n      setIsLoading(false);\n    };\n    \n    loadData();\n  }, [useLiveData]);\n\n  const handleStockSelect = (stock) => {\n    setSelectedStock(stock);\n  };\n  const handleDataChange = async (useLive) => {\n  setIsLoading(true);\n  try {\n    const data = useLive ? await fetchStockData() : mockStocks;\n    setStocks(data);\n  } catch (error) {\n    console.error(\"Data load error:\", error);\n    setStocks(mockStocks); // Fallback to mock data\n  }\n  setIsLoading(false);\n};\n\n  return (\n    <div className=\"app\">\n      <h1>Stock Sorting Visualizer</h1>\n      \n      <DataSourceToggle\n        useLiveData={useLiveData}\n        setUseLiveData={setUseLiveData}\n        isSorting={isSorting}\n        onDataChange={handleDataChange}\n      />\n      \n      <Controls\n        activeAlgorithm={activeAlgorithm}\n        setActiveAlgorithm={setActiveAlgorithm}\n        sortKey={sortKey}\n        setSortKey={setSortKey}\n        speed={speed}\n        setSpeed={setSpeed}\n        visualizationType={visualizationType}\n        setVisualizationType={setVisualizationType}\n        isSorting={isSorting}\n        stocks={stocks}\n        setStocks={setStocks}\n        setIsSorting={setIsSorting}\n        setMetrics={setMetrics}\n        metrics={metrics}\n      />\n      \n      {isLoading ? (\n        <div className=\"loading\">Loading data...</div>\n      ) : (\n        <>\n          <div className=\"visualization-container\">\n            <Visualization\n              stocks={stocks}\n              visualizationType={visualizationType}\n              sortKey={sortKey}\n              onStockSelect={setSelectedStock}  \n            />\n            \n            <AlgorithmExplanation \n              activeAlgorithm={activeAlgorithm}\n            />\n          </div>\n          \n          <PerformanceMetrics \n            metrics={metrics}\n            activeAlgorithm={activeAlgorithm}\n            sortKey={sortKey}\n            isSorting={isSorting}\n          />\n          \n          <StockInfoPanel \n            selectedStock={selectedStock} \n            stocks={stocks} \n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,aAAa,MAAM,2CAA2C;AACrE,OAAO,mBAAmB;AAC1B,OAAOC,kBAAkB,MAAM,yCAAyC;AACxE,OAAOC,gBAAgB,MAAM,wCAAwC;AACrE,OAAOC,cAAc,MAAM,qCAAqC;AAChE,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,OAAOC,kBAAkB,MAAM,gDAAgD;AAC/E,OAAOC,oBAAoB,MAAM,iDAAiD;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC2B,eAAe,EAAEC,kBAAkB,CAAC,GAAG5B,QAAQ,CAAC,QAAQ,CAAC;EAChE,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,OAAO,CAAC;EAC/C,MAAM,CAAC+B,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,GAAG,CAAC;EACvC,MAAM,CAACiC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACmC,OAAO,EAAEC,UAAU,CAAC,GAAGpC,QAAQ,CAAC;IACrCqC,WAAW,EAAE,CAAC;IACdC,KAAK,EAAE,CAAC;IACRC,SAAS,EAAE,IAAI;IACfC,SAAS,EAAE;EACb,CAAC,CAAC;;EAEF;EACAvC,SAAS,CAAC,MAAM;IACd,MAAMwC,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3BjB,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAMkB,IAAI,GAAGvB,WAAW,GAAG,MAAMjB,cAAc,CAAC,CAAC,GAAGM,UAAU;QAC9DU,SAAS,CAACwB,IAAI,CAAC;QACfpB,gBAAgB,CAAC,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOqB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3CzB,SAAS,CAACV,UAAU,CAAC,CAAC,CAAC;QACvB,IAAIW,WAAW,EAAEC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;MAC1C;MACAI,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDiB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACtB,WAAW,CAAC,CAAC;EAEjB,MAAM0B,iBAAiB,GAAIC,KAAK,IAAK;IACnCxB,gBAAgB,CAACwB,KAAK,CAAC;EACzB,CAAC;EACD,MAAMC,gBAAgB,GAAG,MAAOC,OAAO,IAAK;IAC5CxB,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMkB,IAAI,GAAGM,OAAO,GAAG,MAAM9C,cAAc,CAAC,CAAC,GAAGM,UAAU;MAC1DU,SAAS,CAACwB,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxCzB,SAAS,CAACV,UAAU,CAAC,CAAC,CAAC;IACzB;IACAgB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAEC,oBACEZ,OAAA;IAAKqC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtC,OAAA;MAAAsC,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjC1C,OAAA,CAACN,gBAAgB;MACfa,WAAW,EAAEA,WAAY;MACzBC,cAAc,EAAEA,cAAe;MAC/BK,SAAS,EAAEA,SAAU;MACrB8B,YAAY,EAAER;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eAEF1C,OAAA,CAACT,QAAQ;MACPwB,eAAe,EAAEA,eAAgB;MACjCC,kBAAkB,EAAEA,kBAAmB;MACvCC,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA,UAAW;MACvBC,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEA,QAAS;MACnBC,iBAAiB,EAAEA,iBAAkB;MACrCC,oBAAoB,EAAEA,oBAAqB;MAC3CT,SAAS,EAAEA,SAAU;MACrBR,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA,SAAU;MACrBQ,YAAY,EAAEA,YAAa;MAC3BU,UAAU,EAAEA,UAAW;MACvBD,OAAO,EAAEA;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,EAED/B,SAAS,gBACRX,OAAA;MAAKqC,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAE9C1C,OAAA,CAAAE,SAAA;MAAAoC,QAAA,gBACEtC,OAAA;QAAKqC,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBACtCtC,OAAA,CAACR,aAAa;UACZa,MAAM,EAAEA,MAAO;UACfgB,iBAAiB,EAAEA,iBAAkB;UACrCJ,OAAO,EAAEA,OAAQ;UACjB2B,aAAa,EAAElC;QAAiB;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eAEF1C,OAAA,CAACF,oBAAoB;UACnBiB,eAAe,EAAEA;QAAgB;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN1C,OAAA,CAACP,kBAAkB;QACjB8B,OAAO,EAAEA,OAAQ;QACjBR,eAAe,EAAEA,eAAgB;QACjCE,OAAO,EAAEA,OAAQ;QACjBJ,SAAS,EAAEA;MAAU;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eAEF1C,OAAA,CAACL,cAAc;QACbc,aAAa,EAAEA,aAAc;QAC7BJ,MAAM,EAAEA;MAAO;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC;IAAA,eACF,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtC,EAAA,CA/GQD,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AAiHZ,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}