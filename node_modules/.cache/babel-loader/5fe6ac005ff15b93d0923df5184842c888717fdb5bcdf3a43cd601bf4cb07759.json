{"ast":null,"code":"var _jsxFileName = \"C:\\\\stock-sorting-visualizer\\\\src\\\\components\\\\Controls\\\\DataSourceToggle.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataSourceToggle = ({\n  useLiveData,\n  setUseLiveData,\n  isSorting,\n  onDataChange\n}) => {\n  const handleToggle = async () => {\n    const newValue = !useLiveData;\n    setUseLiveData(newValue);\n    if (onDataChange) {\n      await onDataChange(newValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-source-toggle\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Data Source:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `toggle-option ${!useLiveData ? 'active' : ''}`,\n        onClick: () => handleToggle(),\n        disabled: isSorting || !useLiveData,\n        children: \"Mock Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `toggle-option ${useLiveData ? 'active' : ''}`,\n        onClick: () => handleToggle(),\n        disabled: isSorting || useLiveData,\n        children: \"Live API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-source-status\",\n      children: useLiveData ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"live-status\",\n        children: \"Connected to live data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mock-status\",\n        children: \"Using mock data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = DataSourceToggle;\nexport default DataSourceToggle;\nvar _c;\n$RefreshReg$(_c, \"DataSourceToggle\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DataSourceToggle","useLiveData","setUseLiveData","isSorting","onDataChange","handleToggle","newValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/stock-sorting-visualizer/src/components/Controls/DataSourceToggle.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst DataSourceToggle = ({ \r\n  useLiveData, \r\n  setUseLiveData, \r\n  isSorting,\r\n  onDataChange \r\n}) => {\r\n  const handleToggle = async () => {\r\n    const newValue = !useLiveData;\r\n    setUseLiveData(newValue);\r\n    if (onDataChange) {\r\n      await onDataChange(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-source-toggle\">\r\n      <label>Data Source:</label>\r\n      <div className=\"toggle-container\">\r\n        <button\r\n          className={`toggle-option ${!useLiveData ? 'active' : ''}`}\r\n          onClick={() => handleToggle()}\r\n          disabled={isSorting || !useLiveData}\r\n        >\r\n          Mock Data\r\n        </button>\r\n        <button\r\n          className={`toggle-option ${useLiveData ? 'active' : ''}`}\r\n          onClick={() => handleToggle()}\r\n          disabled={isSorting || useLiveData}\r\n        >\r\n          Live API\r\n        </button>\r\n      </div>\r\n      <div className=\"data-source-status\">\r\n        {useLiveData ? (\r\n          <span className=\"live-status\">Connected to live data</span>\r\n        ) : (\r\n          <span className=\"mock-status\">Using mock data</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataSourceToggle;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAC;EACxBC,WAAW;EACXC,cAAc;EACdC,SAAS;EACTC;AACF,CAAC,KAAK;EACJ,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,CAACL,WAAW;IAC7BC,cAAc,CAACI,QAAQ,CAAC;IACxB,IAAIF,YAAY,EAAE;MAChB,MAAMA,YAAY,CAACE,QAAQ,CAAC;IAC9B;EACF,CAAC;EAED,oBACEP,OAAA;IAAKQ,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCT,OAAA;MAAAS,QAAA,EAAO;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC3Bb,OAAA;MAAKQ,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BT,OAAA;QACEQ,SAAS,EAAE,iBAAiB,CAACN,WAAW,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC3DY,OAAO,EAAEA,CAAA,KAAMR,YAAY,CAAC,CAAE;QAC9BS,QAAQ,EAAEX,SAAS,IAAI,CAACF,WAAY;QAAAO,QAAA,EACrC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTb,OAAA;QACEQ,SAAS,EAAE,iBAAiBN,WAAW,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC1DY,OAAO,EAAEA,CAAA,KAAMR,YAAY,CAAC,CAAE;QAC9BS,QAAQ,EAAEX,SAAS,IAAIF,WAAY;QAAAO,QAAA,EACpC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNb,OAAA;MAAKQ,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAChCP,WAAW,gBACVF,OAAA;QAAMQ,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,gBAE3Db,OAAA;QAAMQ,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IACpD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACG,EAAA,GA1CIf,gBAAgB;AA4CtB,eAAeA,gBAAgB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}