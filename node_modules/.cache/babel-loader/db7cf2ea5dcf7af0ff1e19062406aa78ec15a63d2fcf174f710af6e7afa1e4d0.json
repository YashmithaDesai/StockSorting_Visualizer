{"ast":null,"code":"var _jsxFileName = \"/Users/shreya/Desktop/DAA(sem-4)/lab-EL/StockSorting_Visualizer/src/components/Visualizations/LineChart.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = ({\n  data,\n  sortKey\n}) => {\n  const maxValue = Math.max(...data.map(item => item[sortKey]));\n  const chartHeight = 300;\n  const pointRadius = 8;\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"line-chart\",\n    width: \"100%\",\n    height: chartHeight,\n    children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n      fill: \"none\",\n      stroke: \"#2196F3\",\n      strokeWidth: \"3\",\n      points: data.map((stock, i) => {\n        const x = i / (data.length - 1) * 100;\n        const y = chartHeight - stock[sortKey] / maxValue * chartHeight;\n        return `${x}%,${y}`;\n      }).join(' ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), data.map((stock, i) => {\n      const x = i / (data.length - 1) * 100;\n      const y = chartHeight - stock[sortKey] / maxValue * chartHeight;\n      const isPositive = stock.change >= 0;\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: `${x}%`,\n          cy: y,\n          r: pointRadius,\n          fill: isPositive ? '#4CAF50' : '#F44336'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: `${x}%`,\n          y: y - pointRadius - 5,\n          textAnchor: \"middle\",\n          fontSize: \"12\",\n          children: stock.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: `${x}%`,\n          y: y + pointRadius + 15,\n          textAnchor: \"middle\",\n          fontSize: \"10\",\n          children: [\"$\", stock[sortKey].toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, stock.symbol, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LineChart","data","sortKey","maxValue","Math","max","map","item","chartHeight","pointRadius","className","width","height","children","fill","stroke","strokeWidth","points","stock","i","x","length","y","join","fileName","_jsxFileName","lineNumber","columnNumber","isPositive","change","cx","cy","r","textAnchor","fontSize","symbol","toFixed","_c","$RefreshReg$"],"sources":["/Users/shreya/Desktop/DAA(sem-4)/lab-EL/StockSorting_Visualizer/src/components/Visualizations/LineChart.js"],"sourcesContent":["import React from 'react';\n\nconst LineChart = ({ data, sortKey }) => {\n    const maxValue = Math.max(...data.map(item => item[sortKey]));\n    const chartHeight = 300;\n    const pointRadius = 8;\n\n    return (\n        <svg className=\"line-chart\" width=\"100%\" height={chartHeight}>\n            <polyline\n                fill=\"none\"\n                stroke=\"#2196F3\"\n                strokeWidth=\"3\"\n                points={data.map((stock, i) => {\n                    const x = (i / (data.length - 1)) * 100;\n                    const y = chartHeight - (stock[sortKey] / maxValue) * chartHeight;\n                    return `${x}%,${y}`;\n                }).join(' ')}\n            />\n            \n            {data.map((stock, i) => {\n                const x = (i / (data.length - 1)) * 100;\n                const y = chartHeight - (stock[sortKey] / maxValue) * chartHeight;\n                const isPositive = stock.change >= 0;\n                \n                return (\n                    <g key={stock.symbol}>\n                        <circle\n                            cx={`${x}%`}\n                            cy={y}\n                            r={pointRadius}\n                            fill={isPositive ? '#4CAF50' : '#F44336'}\n                        />\n                        <text\n                            x={`${x}%`}\n                            y={y - pointRadius - 5}\n                            textAnchor=\"middle\"\n                            fontSize=\"12\"\n                        >\n                            {stock.symbol}\n                        </text>\n                        <text\n                            x={`${x}%`}\n                            y={y + pointRadius + 15}\n                            textAnchor=\"middle\"\n                            fontSize=\"10\"\n                        >\n                            ${stock[sortKey].toFixed(2)}\n                        </text>\n                    </g>\n                );\n            })}\n        </svg>\n    );\n};\n\nexport default LineChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}