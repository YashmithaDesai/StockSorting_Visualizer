{"ast":null,"code":"var _jsxFileName = \"/Users/shreya/Desktop/DAA(sem-4)/lab-EL/StockSorting_Visualizer/src/components/Visualizations/StockVisualization.js\",\n  _s = $RefreshSig$();\n// src/components/Visualizations/StockVisualization.js\nimport React, { useEffect, useState } from 'react';\nimport { sortingAlgorithms } from '../../algorithms/algorithmHelper';\nimport PseudoCodeDisplay from '../AlgorithmInfo/PseudoCodeDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockVisualization = ({\n  stocks,\n  sortKey,\n  onStockSelect,\n  algorithm,\n  speed,\n  isRacing,\n  setMetrics,\n  mode = 'single'\n}) => {\n  _s();\n  const [localStocks, setLocalStocks] = useState([...stocks]);\n  const [highlightedIndices, setHighlightedIndices] = useState([]);\n  const [sortStartTime, setSortStartTime] = useState(null);\n  const [currentPseudoCodeStep, setCurrentPseudoCodeStep] = useState(null);\n  const [currentMetrics, setCurrentMetrics] = useState({\n    comparisons: 0,\n    swaps: 0,\n    timeTaken: 0,\n    isComplete: false\n  });\n  useEffect(() => {\n    setLocalStocks([...stocks]);\n  }, [stocks]);\n  useEffect(() => {\n    if (isRacing && algorithm) {\n      const startSort = async () => {\n        const startTime = performance.now();\n        setSortStartTime(startTime);\n        if (mode === 'single') {\n          setCurrentPseudoCodeStep(0);\n        }\n\n        // Reset metrics at start\n        const initialMetrics = {\n          comparisons: 0,\n          swaps: 0,\n          startTime,\n          timeTaken: 0,\n          isComplete: false\n        };\n        setCurrentMetrics(initialMetrics);\n        setMetrics(initialMetrics);\n        const updateFn = async (updatedArray, indices, isSwap, delay, finalMetrics, pseudoCodeStep) => {\n          return new Promise(resolve => {\n            setHighlightedIndices(indices);\n            setLocalStocks([...updatedArray]);\n\n            // Update pseudo code step if in single mode\n            if (mode === 'single' && typeof pseudoCodeStep === 'number') {\n              setCurrentPseudoCodeStep(pseudoCodeStep);\n            }\n\n            // If final metrics are provided, use those\n            if (finalMetrics) {\n              const finalState = {\n                comparisons: finalMetrics.totalComparisons,\n                swaps: finalMetrics.totalSwaps,\n                timeTaken: performance.now() - startTime,\n                isComplete: true\n              };\n              setCurrentMetrics(finalState);\n              setMetrics(finalState);\n            } else {\n              // Update metrics in real-time\n              setCurrentMetrics(prev => {\n                const newMetrics = {\n                  ...prev,\n                  comparisons: indices && indices.length >= 2 ? prev.comparisons + 1 : prev.comparisons,\n                  swaps: isSwap ? prev.swaps + 1 : prev.swaps,\n                  timeTaken: performance.now() - startTime\n                };\n                // Update parent component's metrics\n                setMetrics(newMetrics);\n                return newMetrics;\n              });\n            }\n            setTimeout(resolve, delay);\n          });\n        };\n        try {\n          const sortFunction = sortingAlgorithms[algorithm];\n          if (sortFunction) {\n            const arrayCopy = [...localStocks];\n            const transformedArray = arrayCopy.map(stock => ({\n              ...stock,\n              sortValue: sortKey === 'price' || sortKey === 'volume' ? Math.abs(stock[sortKey]) : stock[sortKey]\n            }));\n            await sortFunction(transformedArray, 'sortValue', speed, updateFn);\n            setLocalStocks(transformedArray);\n          }\n        } catch (error) {\n          console.error('Sorting error:', error);\n        }\n      };\n      startSort();\n    } else {\n      setHighlightedIndices([]);\n      setSortStartTime(null);\n      setCurrentPseudoCodeStep(null);\n      setCurrentMetrics({\n        comparisons: 0,\n        swaps: 0,\n        timeTaken: 0,\n        isComplete: false\n      });\n    }\n  }, [isRacing, algorithm, speed, sortKey]);\n  const maxValue = Math.max(...localStocks.map(stock => Math.abs(stock[sortKey])));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `visualization-wrapper ${mode}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-visualization\",\n      children: localStocks.map((stock, index) => {\n        const value = stock[sortKey];\n        const isNegative = stock.change < 0;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stock-item ${highlightedIndices.includes(index) ? 'highlighted' : ''} ${isNegative ? 'negative' : 'positive'}`,\n          onClick: () => onStockSelect(stock),\n          style: {\n            height: `${Math.abs(value) / maxValue * 100}%`,\n            transition: 'all 0.3s ease'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stock-label\",\n            children: [stock.symbol, \": $\", typeof value === 'number' ? Math.abs(value).toFixed(2) : value, (sortKey === 'change' || sortKey === 'changePercent') && (isNegative ? ' (-) ' : ' (+) ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, stock.symbol, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), mode === 'single' && algorithm && /*#__PURE__*/_jsxDEV(PseudoCodeDisplay, {\n      algorithm: algorithm,\n      currentStep: currentPseudoCodeStep\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(StockVisualization, \"tsCIzCTouP8cco2QeWlfKa1zyjI=\");\n_c = StockVisualization;\nexport default StockVisualization;\nvar _c;\n$RefreshReg$(_c, \"StockVisualization\");","map":{"version":3,"names":["React","useEffect","useState","sortingAlgorithms","PseudoCodeDisplay","jsxDEV","_jsxDEV","StockVisualization","stocks","sortKey","onStockSelect","algorithm","speed","isRacing","setMetrics","mode","_s","localStocks","setLocalStocks","highlightedIndices","setHighlightedIndices","sortStartTime","setSortStartTime","currentPseudoCodeStep","setCurrentPseudoCodeStep","currentMetrics","setCurrentMetrics","comparisons","swaps","timeTaken","isComplete","startSort","startTime","performance","now","initialMetrics","updateFn","updatedArray","indices","isSwap","delay","finalMetrics","pseudoCodeStep","Promise","resolve","finalState","totalComparisons","totalSwaps","prev","newMetrics","length","setTimeout","sortFunction","arrayCopy","transformedArray","map","stock","sortValue","Math","abs","error","console","maxValue","max","className","children","index","value","isNegative","change","includes","onClick","style","height","transition","symbol","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","currentStep","_c","$RefreshReg$"],"sources":["/Users/shreya/Desktop/DAA(sem-4)/lab-EL/StockSorting_Visualizer/src/components/Visualizations/StockVisualization.js"],"sourcesContent":["// src/components/Visualizations/StockVisualization.js\nimport React, { useEffect, useState } from 'react';\nimport { sortingAlgorithms } from '../../algorithms/algorithmHelper';\nimport PseudoCodeDisplay from '../AlgorithmInfo/PseudoCodeDisplay';\n\nconst StockVisualization = ({ \n  stocks, \n  sortKey, \n  onStockSelect, \n  algorithm,\n  speed,\n  isRacing,\n  setMetrics,\n  mode = 'single'\n}) => {\n  const [localStocks, setLocalStocks] = useState([...stocks]);\n  const [highlightedIndices, setHighlightedIndices] = useState([]);\n  const [sortStartTime, setSortStartTime] = useState(null);\n  const [currentPseudoCodeStep, setCurrentPseudoCodeStep] = useState(null);\n  const [currentMetrics, setCurrentMetrics] = useState({\n    comparisons: 0,\n    swaps: 0,\n    timeTaken: 0,\n    isComplete: false\n  });\n\n  useEffect(() => {\n    setLocalStocks([...stocks]);\n  }, [stocks]);\n\n  useEffect(() => {\n    if (isRacing && algorithm) {\n      const startSort = async () => {\n        const startTime = performance.now();\n        setSortStartTime(startTime);\n        if (mode === 'single') {\n          setCurrentPseudoCodeStep(0);\n        }\n        \n        // Reset metrics at start\n        const initialMetrics = {\n          comparisons: 0,\n          swaps: 0,\n          startTime,\n          timeTaken: 0,\n          isComplete: false\n        };\n        setCurrentMetrics(initialMetrics);\n        setMetrics(initialMetrics);\n\n        const updateFn = async (updatedArray, indices, isSwap, delay, finalMetrics, pseudoCodeStep) => {\n          return new Promise(resolve => {\n            setHighlightedIndices(indices);\n            setLocalStocks([...updatedArray]);\n            \n            // Update pseudo code step if in single mode\n            if (mode === 'single' && typeof pseudoCodeStep === 'number') {\n              setCurrentPseudoCodeStep(pseudoCodeStep);\n            }\n            \n            // If final metrics are provided, use those\n            if (finalMetrics) {\n              const finalState = {\n                comparisons: finalMetrics.totalComparisons,\n                swaps: finalMetrics.totalSwaps,\n                timeTaken: performance.now() - startTime,\n                isComplete: true\n              };\n              setCurrentMetrics(finalState);\n              setMetrics(finalState);\n            } else {\n              // Update metrics in real-time\n              setCurrentMetrics(prev => {\n                const newMetrics = {\n                  ...prev,\n                  comparisons: indices && indices.length >= 2 ? prev.comparisons + 1 : prev.comparisons,\n                  swaps: isSwap ? prev.swaps + 1 : prev.swaps,\n                  timeTaken: performance.now() - startTime\n                };\n                // Update parent component's metrics\n                setMetrics(newMetrics);\n                return newMetrics;\n              });\n            }\n\n            setTimeout(resolve, delay);\n          });\n        };\n\n        try {\n          const sortFunction = sortingAlgorithms[algorithm];\n          if (sortFunction) {\n            const arrayCopy = [...localStocks];\n            const transformedArray = arrayCopy.map(stock => ({\n              ...stock,\n              sortValue: sortKey === 'price' || sortKey === 'volume'\n                ? Math.abs(stock[sortKey])\n                : stock[sortKey]\n            }));\n            \n            await sortFunction(transformedArray, 'sortValue', speed, updateFn);\n            setLocalStocks(transformedArray);\n          }\n        } catch (error) {\n          console.error('Sorting error:', error);\n        }\n      };\n\n      startSort();\n    } else {\n      setHighlightedIndices([]);\n      setSortStartTime(null);\n      setCurrentPseudoCodeStep(null);\n      setCurrentMetrics({\n        comparisons: 0,\n        swaps: 0,\n        timeTaken: 0,\n        isComplete: false\n      });\n    }\n  }, [isRacing, algorithm, speed, sortKey]);\n\n  const maxValue = Math.max(...localStocks.map(stock => Math.abs(stock[sortKey])));\n\n  return (\n    <div className={`visualization-wrapper ${mode}`}>\n      <div className=\"stock-visualization\">\n        {localStocks.map((stock, index) => {\n          const value = stock[sortKey];\n          const isNegative = stock.change < 0;\n          \n          return (\n            <div \n              key={stock.symbol}\n              className={`stock-item ${highlightedIndices.includes(index) ? 'highlighted' : ''} ${isNegative ? 'negative' : 'positive'}`}\n              onClick={() => onStockSelect(stock)}\n              style={{\n                height: `${(Math.abs(value) / maxValue) * 100}%`,\n                transition: 'all 0.3s ease'\n              }}\n            >\n              <span className=\"stock-label\">\n                {stock.symbol}: ${typeof value === 'number' ? Math.abs(value).toFixed(2) : value}\n                {(sortKey === 'change' || sortKey === 'changePercent') && (isNegative ? ' (-) ' : ' (+) ')}\n              </span>\n            </div>\n          );\n        })}\n      </div>\n      {mode === 'single' && algorithm && (\n        <PseudoCodeDisplay \n          algorithm={algorithm}\n          currentStep={currentPseudoCodeStep}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default StockVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}